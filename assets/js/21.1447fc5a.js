(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{526:function(e,s,t){"use strict";t.r(s);var r=t(6),o=Object(r.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v('使用Dva做自适应测试前端的时候，引入了一个叫react-questionnair的模块，出现错误：cant resolve "../../css"，也就是说css导入不进去了。')]),e._v(" "),t("p",[e._v('dva它是默认就不可以直接导入css的，一般都是用的import styles from ""，然后用style.abc做类名。但是引入的模块很成熟，不可能说全部改掉样式。所以还是得改dva的配置，也就是其打包工具roadhog。')]),e._v(" "),t("p",[e._v('网上能找到的可行解决方案只有一种，就是修改roadhogrc文件，加上 "disableCSSModules":true 来取消导入css-modules。但是我的root目录里根本就没有roadhogrc文件。经过查找，发现在roadhog@2中已经将配置文件改成了.webpackrc文件。加入 "disableCSSModules":true  发现需要restart，可惜的是尝试后错误仍未消失。')]),e._v(" "),t("p",[e._v("决定从头测试一遍。")]),e._v(" "),t("p",[e._v("首先重新创建了react项目，看看是dva的不兼容，还是模块本身有问题。还真的就出错了，看来这个模块本身最少也是有问题的。又仔细梳理了一遍日志，发现都是插件在报错，这个时候才发现是插件过旧已经不支持现有环境了。所以直接npm -g npm-checks-upgrate了，然后改了package.json。")])])}),[],!1,null,null,null);s.default=o.exports}}]);